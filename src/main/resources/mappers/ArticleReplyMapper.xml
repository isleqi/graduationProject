<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.isleqi.graduationproject.dao.mappers.ArticleReplyMapper" >
  <resultMap id="BaseResultMap" type="com.isleqi.graduationproject.domain.ArticleReply" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="article_comment_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="reply_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="reply_user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="replyed_user_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="reply_comtent" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="like_num" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="creat_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithUserAndReply" type="com.isleqi.graduationproject.domain.vo.ArticleReplyVo" >
    <id column="id" property="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result column="article_comment_id" property="articleCommentId" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result column="reply_id" property="replyId" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result column="reply_user_id" property="replyUserId" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result column="replyed_user_id" property="replyedUserId" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result column="reply_comtent" property="replyComtent" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result column="like_num" property="likeNum" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result column="creat_time" property="creatTime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    <association property="replyUser" column="reply_user_id" select="com.isleqi.graduationproject.dao.mappers.UserMapper.selectByPrimaryKey" />
    <association property="replyedUser" column="replyed_user_id" select="com.isleqi.graduationproject.dao.mappers.UserMapper.selectByPrimaryKey" />
    <collection  property="replyVoList" ofType="ArticleReplyVo" column="id" select="com.isleqi.graduationproject.dao.mappers.ArticleReplyMapper.selectByReplyId"/>
  </resultMap>
  <resultMap id="ResultMapWithUser" type="com.isleqi.graduationproject.domain.vo.ArticleReplyVo" >
    <id column="id" property="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result column="article_comment_id" property="articleCommentId" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result column="reply_id" property="replyId" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result column="reply_user_id" property="replyUserId" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result column="replyed_user_id" property="replyedUserId" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result column="reply_comtent" property="replyComtent" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result column="like_num" property="likeNum" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result column="creat_time" property="creatTime" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    <association property="replyUser" column="reply_user_id" select="com.isleqi.graduationproject.dao.mappers.UserMapper.selectByPrimaryKey" />
    <association property="replyedUser" column="replyed_user_id" select="com.isleqi.graduationproject.dao.mappers.UserMapper.selectByPrimaryKey" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, article_comment_id, reply_id, reply_user_id, replyed_user_id, reply_comtent, like_num, 
    creat_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithUser" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from article_reply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectListByCommentId" resultMap="ResultMapWithUser" parameterType="java.lang.Integer" >
    select
     id, article_comment_id, reply_id, reply_user_id, replyed_user_id, reply_comtent, like_num,
    creat_time
    from article_reply
    where article_comment_id = #{commentId,jdbcType=INTEGER} order by creat_time desc
  </select>
  <select id="selectByReplyId" resultMap="ResultMapWithUser" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from article_reply
    where reply_id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from article_reply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.isleqi.graduationproject.domain.ArticleReply" >
    insert into article_reply (id, article_comment_id, reply_id, 
      reply_user_id, replyed_user_id, reply_comtent, 
      like_num, creat_time)
    values (#{id,jdbcType=INTEGER}, #{articleCommentId,jdbcType=INTEGER}, #{replyId,jdbcType=INTEGER}, 
      #{replyUserId,jdbcType=INTEGER}, #{replyedUserId,jdbcType=INTEGER}, #{replyComtent,jdbcType=VARCHAR}, 
      #{likeNum,jdbcType=INTEGER}, #{creatTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.isleqi.graduationproject.domain.ArticleReply" useGeneratedKeys="true" keyProperty="id">
    insert into article_reply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="articleCommentId != null" >
        article_comment_id,
      </if>
      <if test="replyId != null" >
        reply_id,
      </if>
      <if test="replyUserId != null" >
        reply_user_id,
      </if>
      <if test="replyedUserId != null" >
        replyed_user_id,
      </if>
      <if test="replyComtent != null" >
        reply_comtent,
      </if>
      <if test="likeNum != null" >
        like_num,
      </if>

      creat_time,

    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="articleCommentId != null" >
        #{articleCommentId,jdbcType=INTEGER},
      </if>
      <if test="replyId != null" >
        #{replyId,jdbcType=INTEGER},
      </if>
      <if test="replyUserId != null" >
        #{replyUserId,jdbcType=INTEGER},
      </if>
      <if test="replyedUserId != null" >
        #{replyedUserId,jdbcType=INTEGER},
      </if>
      <if test="replyComtent != null" >
        #{replyComtent,jdbcType=VARCHAR},
      </if>
      <if test="likeNum != null" >
        #{likeNum,jdbcType=INTEGER},
      </if>
      now(),
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.isleqi.graduationproject.domain.ArticleReply" >
    update article_reply
    <set >
      <if test="articleCommentId != null" >
        article_comment_id = #{articleCommentId,jdbcType=INTEGER},
      </if>
      <if test="replyId != null" >
        reply_id = #{replyId,jdbcType=INTEGER},
      </if>
      <if test="replyUserId != null" >
        reply_user_id = #{replyUserId,jdbcType=INTEGER},
      </if>
      <if test="replyedUserId != null" >
        replyed_user_id = #{replyedUserId,jdbcType=INTEGER},
      </if>
      <if test="replyComtent != null" >
        reply_comtent = #{replyComtent,jdbcType=VARCHAR},
      </if>
      <if test="likeNum != null" >
        like_num = #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="creatTime != null" >
        creat_time = #{creatTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.isleqi.graduationproject.domain.ArticleReply" >
    update article_reply
    set article_comment_id = #{articleCommentId,jdbcType=INTEGER},
      reply_id = #{replyId,jdbcType=INTEGER},
      reply_user_id = #{replyUserId,jdbcType=INTEGER},
      replyed_user_id = #{replyedUserId,jdbcType=INTEGER},
      reply_comtent = #{replyComtent,jdbcType=VARCHAR},
      like_num = #{likeNum,jdbcType=INTEGER},
      creat_time = #{creatTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>